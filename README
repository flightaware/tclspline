This is tclspline, a direct Tcl interface to spline routines from extracted Tk

Version 1.0

$Id: README,v 1.3 2006-01-04 07:20:44 karl Exp $

This package is a freely available open source package under the "Berkeley"
license, same as Tcl.  You can do virtually anything you like with it, such as 
modifying it, redistributing it, and selling it either in whole or in part.  
See the file "license.terms" for complete information.

tclspline was written by Karl Lehenbauer.

USING TCLSPLINE
================

package require tclspline

<<<<<<< README

TCLSPLINE QUICK REF
===================

tclspline nSteps pointList

    set outputPairs [spline [list $x1 $y1 $x2 $y2 $x3 $y3 $x4 $y4 ...]]

Given a set of coordinate pairs, interpolate steps between the points to
make it a sort of splined curve.

ORIGIN
======

Actual spline routine is from Tk.  This code just splits it out and makes
it callable on lists of coordinates instead of having it be part of the 
canvas widget.


BUGS
====

None known at this time.

CONTENTS
========

Makefile.in	Makefile template.  The configure script uses this file to
		produce the final Makefile.

README		This file

aclocal.m4	Generated file.  Do not edit.  Autoconf uses this as input
		when generating the final configure script.  See "tcl.m4"
		below.

configure	Generated file.  Do not edit.  This must be regenerated
		anytime configure.in or tclconfig/tcl.m4 changes.

configure.in	Configure script template.  Autoconf uses this file as input
		to produce the final configure script.

generic/tclspline.c	Spline routines.
generic/tclspline.h	include file
generic/tclsplinetcl.c	Init routines.


tclconfig/	This directory contains various template files that build
		the configure script.  They should not need modification.

	install-sh	Program used for copying binaries and script files
			to their install locations.

	tcl.m4		Collection of Tcl autoconf macros.  Included by
			aclocal.m4 to define SC_* macros.

UNIX BUILD
==========

Building under most UNIX systems is easy, just run the configure script
and then run make. 

	$ cd tclspline
	$ ./configure
	$ make
	$ make install

WINDOWS BUILD
=============

tclspline has not been built under Windows at this time.

The recommended method to build extensions under Windows is to use the
Msys + Mingw build process. This provides a Unix-style build while
generating native Windows binaries. Using the Msys + Mingw build tools
means that you can use the same configure script as per the Unix build
to create a Makefile.

If you have VC++, then you may wish to use the files in the win
subdirectory and build the extension using just VC++. 

Instructions for using the VC++ makefile are written in the first part of 
the Makefile.vc file.

INSTALLATION
============

The tweezers install like so:

         $exec_prefix
          /       \
        lib       bin
         |         |
   PACKAGEx.y   (dependent .dll files on Windows)
         |
  pkgIndex.tcl (.so|.dll files)

The main .so|.dll library file gets installed in the versioned PACKAGE
directory, which is OK on all platforms because it will be directly
referenced with by 'load' in the pkgIndex.tcl file.  Dependent DLL files on
Windows must go in the bin directory (or other directory on the user's
PATH) in order for them to be found.

